generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  image     String
  createdat DateTime  @default(now())
  updatedat DateTime  @updatedAt
  profile   Profile?
  posts     Post[]
  likes     Like[]
  comments  Comment[]
}

model Profile {
  id         String  @id @default(cuid())
  bio        String?
  screenName String? @unique
  userId     String  @unique
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Post {
  id          String    @id @default(cuid())
  userId      String
  title       String
  description String
  imageUrl    String?
  videoUrl    String?
  youtube     String?
  thumbnail   String?
  createdat   DateTime  @default(now())
  updatedat   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes       Like[]
  comments    Comment[]
  part        Part?
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
}

model Part {
  id       String @id @default(cuid())
  case     String
  plate    String
  switches String
  keyCaps  String
  postId   String @unique
  post     Post   @relation(fields: [postId], references: [id])
}

model Category {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  createdat DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Comment {
  id        String    @id @default(cuid())
  userId    String
  postId    String
  body      String
  createdat DateTime  @default(now())
  updatedat DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  parent    Comment?  @relation("CommentToComment", fields: [parentId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("CommentToComment")
  parentId  String?
}
